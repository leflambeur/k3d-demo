{
  "swagger": "2.0",
  "info": {
    "title": "RecordEvidence API",
    "version": "2.0",
    "contact": {
      "name": "Jitsuin",
      "url": "https://www.jitsuin.com"
    }
  },
  "tags": [
    {
      "name": "BehaviourRecordEvidence"
    }
  ],
  "host": "jitsuin.readthedocs.io",
  "basePath": "/archivist/v2",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/archivist/v2/assets/{asset_id}/events": {
      "post": {
        "operationId": "BehaviourRecordEvidence_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2EventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "asset_id",
            "description": "identity of a related asset resource `assets/11bf5b37-e0b8-42e0-8dcf-dc8c4aefc000`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CreateEventRequest"
            }
          }
        ],
        "tags": [
          "BehaviourRecordEvidence"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v2Attribute": {
      "type": "object",
      "properties": {
        "str_val": {
          "type": "string"
        },
        "dict_val": {
          "$ref": "#/definitions/v2DictAttr"
        },
        "list_val": {
          "$ref": "#/definitions/v2ListAttr"
        }
      }
    },
    "v2ConfirmationStatus": {
      "type": "string",
      "enum": [
        "CONFIRMATION_STATUS_UNSPECIFIED",
        "PENDING",
        "CONFIRMED",
        "FAILED"
      ],
      "default": "CONFIRMATION_STATUS_UNSPECIFIED"
    },
    "v2CreateEventRequest": {
      "type": "object",
      "example": {
        "operation": "Record",
        "behaviour": "RecordEvidence",
        "event_attributes": {
          "arc_attachments": [
            {
              "arc_attachment_identity": "blobs/1754b920-cf20-4d7e-9d36-9ed7d479744d",
              "arc_hash_value": "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b",
              "arc_display_name": "Picture from yesterday",
              "arc_hash_alg": "sha256"
            }
          ]
        },
        "asset_attributes": {
          "arc_firmware_version": "3.2.1",
          "arc_home_location_identity": "locations/42054f10-9952-4c10-a082-9fd0d10295ae"
        },
        "timestamp_declared": "2019-11-27T14:44:19Z",
        "principal_declared": {
          "issuer": "job.idp.server/1234",
          "subject": "bob@job"
        }
      },
      "properties": {
        "asset_id": {
          "type": "string",
          "description": "identity of a related asset resource `assets/11bf5b37-e0b8-42e0-8dcf-dc8c4aefc000`",
          "title": "relative resource name for associated asset ( asset the operation is performed on  - has to have specific behaviour enabled)",
          "readOnly": true
        },
        "behaviour": {
          "type": "string",
          "title": "name of this behaviour"
        },
        "operation": {
          "type": "string",
          "title": "name of operation on this behviour"
        },
        "principal_declared": {
          "$ref": "#/definitions/v2Principal",
          "title": "principal information associated with event - if not provided will be set to principal_accepted"
        },
        "timestamp_declared": {
          "type": "string",
          "format": "date-time",
          "description": "time of event as declared by the user",
          "title": "timestamp when operation was actually performed - if not provided will be set to timestamp_accepted",
          "readOnly": true
        },
        "event_attributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v2Attribute"
          },
          "description": "key value mapping of event attributes"
        },
        "asset_attributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v2Attribute"
          },
          "description": "key value mapping of asset attributes"
        }
      },
      "description": "Request creating RecordEvidence event Specify `operation` to chose which RecordEvidence event to create "
    },
    "v2DictAttr": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v2EventResponse": {
      "type": "object",
      "example": {
        "identity": "assets/add30235-1424-4fda-840a-d5ef82c4c96f/events/11bf5b37-e0b8-42e0-8dcf-dc8c4aefc000",
        "asset_identity": "assets/add30235-1424-4fda-840a-d5ef82c4c96f",
        "operation": "Record",
        "behaviour": "RecordEvidence",
        "event_attributes": {
          "arc_attachments": [
            {
              "arc_attachment_identity": "blobs/1754b920-cf20-4d7e-9d36-9ed7d479744d",
              "arc_hash_value": "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b",
              "arc_display_name": "Picture from yesterday",
              "arc_hash_alg": "sha256"
            }
          ]
        },
        "asset_attributes": {
          "arc_firmware_version": "3.2.1",
          "arc_home_location_identity": "locations/42054f10-9952-4c10-a082-9fd0d10295ae"
        },
        "timestamp_accepted": "2019-11-27T14:44:19Z",
        "timestamp_declared": "2019-11-27T14:44:19Z",
        "timestamp_committed": "2019-11-27T14:44:19Z",
        "principal_declared": {
          "issuer": "job.idp.server/1234",
          "subject": "bob@job"
        },
        "principal_accepted": {
          "issuer": "job.idp.server/1234",
          "subject": "bob@job"
        },
        "confirmation_status": "CONFIRMED",
        "block_number": 12,
        "transaction_index": 5,
        "transaction_id": "0x07569"
      },
      "properties": {
        "identity": {
          "type": "string",
          "description": "identity of a event resource",
          "title": "Relative Resource Name for the operation event",
          "readOnly": true
        },
        "asset_identity": {
          "type": "string",
          "description": "identity of a related asset resource `assets/11bf5b37-e0b8-42e0-8dcf-dc8c4aefc000`",
          "title": "relative resource name for associated asset ( asset the operation is performed on  - has to have specific behaviour enabled)",
          "readOnly": true
        },
        "event_attributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v2Attribute"
          },
          "description": "key value mapping of event attributes"
        },
        "asset_attributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v2Attribute"
          },
          "description": "key value mapping of asset attributes"
        },
        "operation": {
          "type": "string",
          "description": "The operation represented by the event. `Record`",
          "title": "name of operation on this behviour",
          "readOnly": true,
          "maxLength": 4096
        },
        "behaviour": {
          "type": "string",
          "description": "The behaviour used to create event. `RecordEvidence`",
          "title": "name of this behaviour",
          "readOnly": true,
          "maxLength": 4096
        },
        "timestamp_declared": {
          "type": "string",
          "format": "date-time",
          "description": "time of event as declared by the user",
          "title": "timestamp when operation was actually performed - if not provided will be set to timestamp_accepted",
          "readOnly": true
        },
        "timestamp_accepted": {
          "type": "string",
          "format": "date-time",
          "description": "time of event as recorded by the server",
          "title": "timestamp when system received operation request",
          "readOnly": true
        },
        "timestamp_committed": {
          "type": "string",
          "format": "date-time",
          "description": "time of event as recorded on blockchain",
          "title": "timestamp operation has been committed on the blockchain",
          "readOnly": true
        },
        "principal_declared": {
          "type": "object",
          "$ref": "#/definitions/v2Principal",
          "description": "principal provided by the user",
          "title": "principal information associated with event - if not provided will be set to principal_accepted",
          "readOnly": true
        },
        "principal_accepted": {
          "type": "object",
          "$ref": "#/definitions/v2Principal",
          "description": "principal recorded by the server",
          "title": "principal logged into the system that performed the operation",
          "readOnly": true
        },
        "confirmation_status": {
          "type": "string",
          "$ref": "#/definitions/v2ConfirmationStatus",
          "description": "indicates if the event has been succesfully committed to the blockchain",
          "title": "indicated if operation has been committed to the blockchain",
          "readOnly": true
        },
        "transaction_id": {
          "type": "string",
          "description": "hash of the transaction as a hex string `0x11bf5b37e0b842e08dcfdc8c4aefc000`",
          "title": "hash of transaction committing this operation on blockchain",
          "maxLength": 4096
        },
        "block_number": {
          "type": "string",
          "format": "uint64",
          "description": "number of block event was commited on",
          "title": "block number of committing transaction",
          "readOnly": true
        },
        "transaction_index": {
          "type": "string",
          "format": "uint64",
          "description": "index of event within commited block",
          "title": "transaction index of committing transaction",
          "readOnly": true
        },
        "from": {
          "type": "string",
          "description": "wallet address for the creator of this event",
          "title": "wallet address for the creator of this event",
          "readOnly": true
        }
      },
      "description": "This describes Jitsuin Event."
    },
    "v2ListAttr": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2DictAttr"
          }
        }
      }
    },
    "v2Principal": {
      "type": "object",
      "example": {
        "issuer": "job.idp.server/1234",
        "subject": "bob@job"
      },
      "properties": {
        "issuer": {
          "type": "string",
          "description": "optional issuer of the principal identity. Where the issuer is not provided the subject is treated as a free string",
          "maxLength": 1024
        },
        "subject": {
          "type": "string",
          "description": "unique identifier of the principal (within issuer context)",
          "maxLength": 1024
        },
        "display_name": {
          "type": "string",
          "description": "The displayable name of the end-user.  The name claim is prefered, followed by email claims, then a composite of  given_name, middle_name, family_name",
          "maxLength": 1024
        },
        "email": {
          "type": "string",
          "description": "The email for the end-user if available. If email_verified is  available it is preferd. Empty if neither email_verified or email  are provided by the IdP",
          "maxLength": 1024
        }
      },
      "description": "The principal description assured by the configured Identity  Provider. All values are according to OIDC id token claims and  standard claims.  See https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims"
    }
  }
}

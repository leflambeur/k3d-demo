apiVersion: v1
kind: Namespace
metadata:
  name: argo
  labels:
    name: argo
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: argo
  namespace: argo
spec:
  chart: argo-workflows
  targetNamespace: argo
  repo: https://argoproj.github.io/argo-helm
  valuesContent: |-
    singleNamespace: true
    controller:
      workflowNamespaces:
        - argo
      containerRuntimeExecutor: pns
    server:
      baseHref: "/argo/"
    useDefaultArtifactRepo: true
    artifactRepository:
      archiveLogs: false
      s3:
        insecure: true
        endpoint: s3-proxy-svc.s3-proxy.svc.cluster.local
        region: us-east-1
        bucket: argobackend
        accessKeySecret:
          name: argo-artifacts
          key: secretkey
        secretKeySecret:
          name: argo-artifacts
          key: secretkey
---
apiVersion: v1
kind: Secret
metadata:
  name: argo-artifacts
  namespace: argo
data:
  accesskey: |
    bG9jYWwtY3JlZGVudGlhbAo=
  secretkey: |
    cmVtb3RlLWNyZWRlbnRpYWw=
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: http-redirect-ingressroute
  namespace: argo
spec:
  entryPoints:
    - web
  routes:
    - match: PathPrefix(`/argo`)
      kind: Rule
      services:
        - name: argo-argo-workflows-server
          namespace: argo
          port: 2746
          scheme: http
      middlewares:
        - name: argo-prefix
---
# Replace path with regex
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: argo-prefix
  namespace: argo
spec:
  stripPrefix:
    prefixes:
      - /argo
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-argo-workflows-workflow-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: argo-argo-workflows-workflow-controller
    namespace: argo
apiVersion: v1
kind: Namespace
metadata:
  name: s3-proxy
  labels:
    name: s3-proxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: s3-proxy
  labels:
    app: s3-proxy
  namespace: s3-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: s3-proxy
  template:
    metadata:
      labels:
        app: s3-proxy
    spec:
      containers:
      - name: s3-proxy
        image: andrewgaul/s3proxy
        ports:
        - containerPort: 80
        env:
        - name: S3PROXY_AUTHORIZATION
          value: none
---
kind: Service
apiVersion: v1
metadata:
  name: s3-proxy-svc
  namespace: s3-proxy
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector: 
    app: s3-proxy
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: s3-proxy-ingress
  namespace: s3-proxy
  annotations:
    traefik.ingress.kubernetes.io/rule-type: "PathPrefixStrip"
spec:
  rules:
  - http:
      paths:
      - path: /s3-proxy
        pathType: Prefix
        backend:
          service:
            name: s3-proxy-svc
            port:
              number: 80
---
apiVersion: batch/v1
kind: Job
metadata:
  name: create-bucket
spec:
  template:
    spec:
      containers:
      - name: curl
        image: curlimages/curl
        args: ["--request",  "PUT", "http://s3-proxy-svc.s3-proxy.svc.cluster.local/argobackend"]
      restartPolicy: Never
  backoffLimit: 10

